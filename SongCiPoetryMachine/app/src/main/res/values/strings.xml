<resources>
    <string name="app_name">宋词机</string>
    <string name="title">宋词机</string>
    <string name="write_poems">写宋词</string>
    <string name="poems_book">宋词本</string>
    <string name="poems_table">词频表</string>
    <string name="edit_hint">输入一组数字，如:10086</string>
    <string name="result">生成结果</string>
    <string name="more_result">算法补充生成</string>
    <string name="change">换一首</string>
    <string name="back">返回</string>
    <string name="table_title">词频统计说明</string>
    <string name="introduce">"       相信大家对宋词都不会陌生。无论你是否喜欢，总还是可以吟诵出几句名篇来的。如果你经常找一些宋词来读的话，你可能会发现一个有趣的现象，那就是有些词语或意象似乎特别受到词人的青睐，像是东风，明月，芳草等等。从统计的角度来看，上面这个问题其实非常简单，无非就是计算一下宋词之中词语出现的频率，然后做一个排序就可以了。但这个问题对于中文来说恰恰是最难攻克的一个环节。在英语中，词语与词语之间有着天然的分隔符，但对于中文，只有句子之间有标点符号，句子之内只能通过词语的含义来进行辨别。这也就是为什么在文本挖掘领域中，中文的分词依然是一个富有挑战性的任务的原因。
       不过好在宋词本身的形式帮了我们很大的忙。首先，宋词的句子一般都非常短，这相当于已经有了一次粗略的词语划分；其次，宋词的用词也很简洁，一个词一般是两个字，偶尔可能有三个字、四个字，超过四个字的词就非常罕见了。于是我们就有一种比较“野蛮”的做法，来对宋词中的用词进行划分。
       举个例子来说，《青玉案》中的这句“东风夜放花千树”，如果把所有可能的两个字的组合列出来，就是：

东风  风夜  夜放  放花  花千  千树

如果再把三个字的可能组合列出来，则有：

东风夜  风夜放  夜放花  放花千  花千树

       如果不考虑其它的可能，那么总共就有11个词语。当然，这其中会有很多无意义的组合，但是我们可以预想的是，这些无意义的组合将不太可能大规模地重复出现，因此在排序的过程中它们自动地就被排在高频词语之后了。通过这种做法，宋词中的每句话大体都能分成10个左右的词语单位，然后对所有的这些词语单位进行频数统计，就可以得到最终的高频词语列表了。"</string>
    <string-array name="spinner_array">
        <item>清平乐</item>
        <item>浣溪沙</item>
        <item>菩萨蛮</item>
    </string-array>
</resources>
